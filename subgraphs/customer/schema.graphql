extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

type Query {
  customer(id: ID!): Customer
  customers: [Customer]
}

type Mutation {
  createCustomer(input: CreateCustomerInput): CreateCustomerPayload
}

type Customer @key(fields: "id") @cacheControl(maxAge: 240) {
  id: ID!
  name: String
  profile: String
  address: Address
}

type Address {
  street1: String
  street2: String
  city: String
  stateCode: String
  zipCode: String
}

input CreateCustomerInput {
  name: String
  profile: String
  address: AddressInput
}

input AddressInput {
  street1: String
  street2: String
  city: String
  stateCode: String
  zipCode: String
}

type CreateCustomerPayload {
  id: ID!
  name: String
  profile: String
  address: Address
}

# type Post {
#   id: ID!
#   title: String
#   votes: Int @cacheControl(maxAge: 30)
#   readByCurrentUser: Boolean! @cacheControl(maxAge: 10, scope: PRIVATE)
# }
